.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "5.40.0::5.40.0::5.40.0::5.40.0::5.40.0::Net::FTP::dataconn 3"
.TH 5.40.0::5.40.0::5.40.0::5.40.0::5.40.0::Net::FTP::dataconn 3 2024-12-14 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Net::FTP::dataconn \- FTP Client data connection class
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    # Perform IO operations on an FTP client data connection object:
\&
\&    $num_bytes_read = $obj\->read($buffer, $size);
\&    $num_bytes_read = $obj\->read($buffer, $size, $timeout);
\&
\&    $num_bytes_written = $obj\->write($buffer, $size);
\&    $num_bytes_written = $obj\->write($buffer, $size, $timeout);
\&
\&    $num_bytes_read_so_far = $obj\->bytes_read();
\&
\&    $obj\->abort();
\&
\&    $closed_successfully = $obj\->close();
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Some of the methods defined in \f(CW\*(C`Net::FTP\*(C'\fR return an object which will
be derived from this class. The dataconn class itself is derived from
the \f(CW\*(C`IO::Socket::INET\*(C'\fR class, so any normal IO operations can be performed.
However the following methods are defined in the dataconn class and IO should
be performed using these.
.ie n .IP """read($buffer, $size[, $timeout])""" 4
.el .IP "\f(CWread($buffer, $size[, $timeout])\fR" 4
.IX Item "read($buffer, $size[, $timeout])"
Read \f(CW$size\fR bytes of data from the server and place it into \f(CW$buffer\fR, also
performing any <CRLF> translation necessary. \f(CW$timeout\fR is optional, if not
given, the timeout value from the command connection will be used.
.Sp
Returns the number of bytes read before any <CRLF> translation.
.ie n .IP """write($buffer, $size[, $timeout])""" 4
.el .IP "\f(CWwrite($buffer, $size[, $timeout])\fR" 4
.IX Item "write($buffer, $size[, $timeout])"
Write \f(CW$size\fR bytes of data from \f(CW$buffer\fR to the server, also
performing any <CRLF> translation necessary. \f(CW$timeout\fR is optional, if not
given, the timeout value from the command connection will be used.
.Sp
Returns the number of bytes written before any <CRLF> translation.
.ie n .IP bytes_read() 4
.el .IP \f(CWbytes_read()\fR 4
.IX Item "bytes_read()"
Returns the number of bytes read so far.
.ie n .IP abort() 4
.el .IP \f(CWabort()\fR 4
.IX Item "abort()"
Abort the current data transfer.
.ie n .IP close() 4
.el .IP \f(CWclose()\fR 4
.IX Item "close()"
Close the data connection and get a response from the FTP server. Returns
\&\fItrue\fR if the connection was closed successfully and the first digit of
the response from the server was a '2'.
.SH EXPORTS
.IX Header "EXPORTS"
\&\fINone\fR.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
\&\fINone\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Graham Barr <gbarr@pobox.com <mailto:gbarr@pobox.com>>.
.PP
Steve Hay <shay@cpan.org <mailto:shay@cpan.org>> is now maintaining
libnet as of version 1.22_02.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (C) 1997\-2010 Graham Barr.  All rights reserved.
.PP
Copyright (C) 2013\-2014, 2020 Steve Hay.  All rights reserved.
.SH LICENCE
.IX Header "LICENCE"
This module is free software; you can redistribute it and/or modify it under the
same terms as Perl itself, i.e. under the terms of either the GNU General Public
License or the Artistic License, as specified in the \fILICENCE\fR file.
.SH VERSION
.IX Header "VERSION"
Version 3.15
.SH DATE
.IX Header "DATE"
20 March 2023
.SH HISTORY
.IX Header "HISTORY"
See the \fIChanges\fR file.
