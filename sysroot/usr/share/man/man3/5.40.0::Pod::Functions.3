.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "5.40.0::Pod::Functions 3"
.TH 5.40.0::Pod::Functions 3 2024-12-13 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Pod::Functions \- Group Perl's functions a la perlfunc.pod
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Pod::Functions;
\&
\&    my @misc_ops = @{ $Kinds{ \*(AqMisc\*(Aq } };
\&    my $misc_dsc = $Type_Description{ \*(AqMisc\*(Aq };
.Ve
.PP
or
.PP
.Vb 1
\&    perl /path/to/lib/Pod/Functions.pm
.Ve
.PP
This will print a grouped list of Perl's functions, like the 
"Perl Functions by Category" in perlfunc section.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
It exports the following variables:
.ie n .IP %Kinds 4
.el .IP \f(CW%Kinds\fR 4
.IX Item "%Kinds"
This holds a hash-of-lists. Each list contains the functions in the category
the key denotes.
.ie n .IP %Type 4
.el .IP \f(CW%Type\fR 4
.IX Item "%Type"
In this hash each key represents a function and the value is the category.
The category can be a comma separated list.
.ie n .IP %Flavor 4
.el .IP \f(CW%Flavor\fR 4
.IX Item "%Flavor"
In this hash each key represents a function and the value is a short 
description of that function.
.ie n .IP %Type_Description 4
.el .IP \f(CW%Type_Description\fR 4
.IX Item "%Type_Description"
In this hash each key represents a category of functions and the value is 
a short description of that category.
.ie n .IP @Type_Order 4
.el .IP \f(CW@Type_Order\fR 4
.IX Item "@Type_Order"
This list of categories is used to produce the same order as the
"Perl Functions by Category" in perlfunc section.
